// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace AdminClient.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class UpdateCraftDto
    {
        /// <summary>
        /// Initializes a new instance of the UpdateCraftDto class.
        /// </summary>
        public UpdateCraftDto() { }

        /// <summary>
        /// Initializes a new instance of the UpdateCraftDto class.
        /// </summary>
        public UpdateCraftDto(double id, string name = default(string), string description = default(string), double? material = default(double?), double? category = default(double?), IList<double?> photos = default(IList<double?>), double? author = default(double?), double? thumbnail = default(double?), bool? disabled = default(bool?))
        {
            Id = id;
            Name = name;
            Description = description;
            Material = material;
            Category = category;
            Photos = photos;
            Author = author;
            Thumbnail = thumbnail;
            Disabled = disabled;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public double Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "material")]
        public double? Material { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        public double? Category { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "photos")]
        public IList<double?> Photos { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "author")]
        public double? Author { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "thumbnail")]
        public double? Thumbnail { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "disabled")]
        public bool? Disabled { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
        }
    }
}
